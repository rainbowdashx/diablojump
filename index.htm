<!DOCTYPE html>
<html>

<head>
    <title>Diablo Jump</title>

	<style type="text/css">
		body
		{
		
		background-color:#000;
		color:#FFF;
		font-family:Arial;
		font-size:20px;
		
		}
		
	</style>
	
    <style>
        #main {
            width: 1024px;
            height: 768px;
            image-rendering: optimizeSpeed;
            image-rendering: -moz-crisp-edges;
            image-rendering: -webkit-optimize-contrast;
        }
    </style>
    <script src="js/jquery.js"></script>
    <script src="js/vector2.js"></script>
    <script src="js/sprite.js"></script>
    <script src="js/entity.js"></script>
    <script src="js/obj.js"></script>



</head>
<body>
    <div style="margin:auto; width:1024px; position:relative;">
        <canvas id="main" width="1024" height="768"></canvas>

        <div style="position: absolute; right: 20px; top: 20px;">
            <p id="djScore" style=""></p>
            <p id="djHealth" style=""></p>
        </div>
    </div>


    



    <script>


        var imgDiabloSprite = new Image();
        imgDiabloSprite.src = 'img/diablo.png';

        var sprDiabloIdle = new Sprite(imgDiabloSprite, [0, 0], [128, 128],
                       9, [0]);
        var sprDiabloJump = new Sprite(imgDiabloSprite, [128, 0], [128, 128],
                     9, [0]);
        var sprDiabloFall = new Sprite(imgDiabloSprite, [256, 0], [128, 128],
                     9, [0]);
        var sprDiabloGlide = new Sprite(imgDiabloSprite, [384, 0], [128, 128],
                     9, [0]);
        var sprDiabloPowerup = new Sprite(imgDiabloSprite, [512, 0], [128, 128],
                     9, [0]);
        var sprDiabloHit = new Sprite(imgDiabloSprite, [640, 0], [128, 128],
                  9, [0]);
        var sprDiabloDeath = new Sprite(imgDiabloSprite, [768, 0], [128, 128],
                  9, [0]);

        var imgWolke = new Image();
        imgWolke.src = 'img/wolke_norm.png';

        var imgBackground = new Image();
        imgBackground.src = 'img/background.png';

        var imgForeground = new Image();
        imgForeground.src = 'img/foreground.png';


        var imgPowerup = new Image();
        imgPowerup.src = 'img/powerup.png';

        var imgAngelSprite = new Image();
        imgAngelSprite.src = 'img/egel_Spr.png';

        var imgSoul = new Image();
        imgSoul.src = 'img/soul.png';


        //(img, pos, size, speed, frames, dir, once)
        var sprAngel = new Sprite(imgAngelSprite, [0, 0], [128, 128],
                          9, [0, 1, 2, 3, 4, 5, 4, 3, 2, 1])

        //var snd = new Audio("file.wav"); 
        //snd.play();
        //

        var nextSpawn = $.now() + 10000;
        var nextSoul = $.now() + 12000;
        var nextPowerUp = -1000;
        var ctx;
        var SCREEN_W = 1024,
            SCREEN_H = 768;
        var CAMx = 0,
            CAMy = 21000;
        var MX = 0,
            MY = 0;
        var lastTime = $.now();
        var dt = 0;
        var nextSegment = -600;
        var players = {};
        var player = new Player(20, 0);
        var angels = [];
        var powerups = [];
        var souls = [];
        angels.push(new Angel(20, -200, 5));
        angels.push(new Angel(1000, -200, -5));

        var clouds = [];
        /*for (var i = 0 ; i < 20; i++) {
            clouds.push(new Cloud(getRnd(0, 1024), getRnd(19000, 20000), 0));
        }*/
        for (var i = 0 ; i < 5; i++) {
            clouds.push(new Cloud(128 * i, 250, 1));
            clouds.push(new Cloud(1024 - (128 * i), 50, 1));
            clouds.push(new Cloud(128 * i, -150, 1));
            clouds.push(new Cloud(1024 - (128 * i), -350, 1));
            clouds.push(new Cloud(128 * i, -550, 1));
        }



        var Key = {
            _pressed: {},

            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40,
            CTRL: 17,
            SHIFT: 16,

            isDown: function (keyCode) {
                return this._pressed[keyCode];
            },

            onKeydown: function (event) {
                this._pressed[event.keyCode] = true;
            },

            onKeyup: function (event) {
                delete this._pressed[event.keyCode];
            }
        };


        window.requestAnimFrame = (function () {
            return window.requestAnimationFrame ||
                window.webkitRequestAnimationFrame ||
                window.mozRequestAnimationFrame ||
                window.oRequestAnimationFrame ||
                window.msRequestAnimationFrame ||
                function (/* function */ callback, /* DOMElement */ element) {
                    window.setTimeout(callback, 1000 / 60);
                };
        })();

        $(function () {
            $(this).bind("contextmenu", function (e) {
                e.preventDefault();
            });
        });

        var canvas = document.getElementById("main");
        window.addEventListener('keyup', function (event) { Key.onKeyup(event); }, false);
        window.addEventListener('keydown', function (event) { Key.onKeydown(event); }, false);
        canvas.addEventListener("mousedown", getPosition, false);

        function getPosition(event) {
            var x = 0;
            var y = 0;
            var canvas = document.getElementById("main");

            if (event.x != undefined && event.y != undefined) {
                x = event.x;
                y = event.y;
            }
            else // Firefox method to get the position
            {
                x = event.clientX + document.body.scrollLeft +
                    document.documentElement.scrollLeft;
                y = event.clientY + document.body.scrollTop +
                    document.documentElement.scrollTop;
            }

            x -= canvas.offsetLeft;
            y -= canvas.offsetTop;
            MX = x;
            MY = y;
        }

        function recsOverlap(x1, y1, w1, h1, x2, y2, w2, h2) {

            if ((x1 > (x2 + w2)) || (x1 + w1) < x2)
                return false;
            if ((y1 > (y2 + h2)) || (y1 + h1) < y2)
                return false;

            return true;
        }


        function getRnd(min, max) {
            r = Math.random();
            return min + parseInt(r * (max - min + 1));
        }



    </script>

    <script>



        update();

        function update() {


            var now = $.now();

            dt = (now - lastTime) / 1000.0;


            player.update();

            clouds = clouds.filter(function (cloud) {
                return cloud.active;
            });


            angels = angels.filter(function (angel) {
                return angel.active;
            });

            powerups = powerups.filter(function (power) {
                return power.active;
            });

            souls = souls.filter(function (soul) {
                return soul.active;
            });

            if (nextSpawn < now) {
                var Y = getRnd(0, 500);
                var temp = getRnd(0, 1);
                temp == 1 ?
                angels.push(new Angel(0, CAMy + Y, 5)) :
                angels.push(new Angel(1050, CAMy + Y, -5));
                nextSpawn = now + getRnd(5000, 15000);
            }

            if (nextSoul < now) {

                souls.push(new Soul(getRnd(0, 1024), CAMy + 1000));
                nextSoul = now + getRnd(5000, 10000);
            }

            draw();
            requestAnimFrame(update);

            lastTime = now;
        };

        function draw() {

            ctx = document.getElementById('main').getContext('2d');
            /*ctx.fillStyle = "#08F";
            ctx.fillRect(0, 0, SCREEN_W, SCREEN_H);*/

            ctx.translate(0, 0);
            ctx.drawImage(imgBackground, 0, 0, 1024, 768);

            clouds.forEach(function (cloud) {
                cloud.update();
                cloud.draw(CAMx, CAMy);
            });

            souls.forEach(function (soul) {
                soul.update();
                soul.draw(CAMx, CAMy);
            });

            powerups.forEach(function (power) {
                power.update();
                power.draw(CAMx, CAMy);
            });

            angels.forEach(function (angel) {
                angel.update();
                angel.draw(CAMx, CAMy);
            });

            player.draw(CAMx, CAMy);

            ctx.drawImage(imgForeground, 0, 0, 1024, 768);

            $("#djScore").html(player.score);

            $("#djHealth").html(Math.floor(player.health));


        };

    </script>
</body>
</html>

